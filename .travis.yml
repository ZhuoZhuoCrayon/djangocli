# https://docs.travis-ci.com/user/job-lifecycle/
language: python

cache:
  directories:
   - "$HOME/.cache/pip"

python:
  - 3.6
  - 3.7
  - 3.8
  - 3.9

services:
  - mysql
  - redis
  - rabbitmq

env:
  global:
    - DC_ENV=dev
    # 主线维护版本
    - MAINLINE_PYTHON_VERSION="3.7"
    - MAINLINE_DJANGO_VERSION="3.1.5"
    # 单元测试覆盖排除文件
    - COVERAGE_OMIT_PATH="*/virtualenv/*,*/venv/*,*/migrations/*,*/tests/*"
  jobs:
    - DJANGO_VERSION="3.1.5"
    - DJANGO_VERSION="3.2.0"
    - DJANGO_VERSION="3.2.4"

jobs:
  allow_failures:
    # 灰度 Python=3.9 & DJANGO_VERSION>=3.2.0 允许失败
    - python: 3.9
      env: DJANGO_VERSION="3.2.0"
    - python: 3.9
      env: DJANGO_VERSION="3.2.4"

  exclude:
    - python: 3.6
      env: DJANGO_VERSION="3.2.0"
    - python: 3.6
      env: DJANGO_VERSION="3.2.4"

# before the install phase
before_install:
  - pip install --upgrade pip

# install any dependencies required
install:
  - pip install -r scripts/deploy/${DC_ENV}/requirements.txt
  - pip install django==${DJANGO_VERSION}

# before the script phase
before_script:
  - flake8
  - source support-files/deploy/${DC_ENV}/environ.sh
  - mysql -u$DC_MYSQL_USER -e "CREATE DATABASE IF NOT EXISTS \`$DC_MYSQL_NAME\` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci;"
  - python manage.py migrate


# run the build script
# travis-ci 默认script部分的脚本返回非零后继续执行后续语句，以便查看集成结果，如果希望非零时直接暂停，可以通过 && 将脚本集合并成一个语句
script:
  - |
      if [[ ${TRAVIS_PYTHON_VERSION} == ${MAINLINE_PYTHON_VERSION} && ${DJANGO_VERSION} == ${MAINLINE_DJANGO_VERSION} ]]
      then
        coverage erase
        coverage run --omit=$COVERAGE_OMIT_PATH ./manage.py test
        coverage report --omit=$COVERAGE_OMIT_PATH
      else
        python manage.py test
      fi


# when the build succeeds (e.g. building documentation), the result is in TRAVIS_TEST_RESULT environment variable
after_success:
  - echo "current python version -> ${TRAVIS_PYTHON_VERSION}, mainline python version -> ${MAINLINE_PYTHON_VERSION}"
  - echo "current django version -> ${DJANGO_VERSION}, mainline django version -> ${MAINLINE_DJANGO_VERSION}"
  - |
    if [[ ${TRAVIS_PYTHON_VERSION} == ${MAINLINE_PYTHON_VERSION} && ${DJANGO_VERSION} == ${MAINLINE_DJANGO_VERSION} ]]
    then
      codecov
    else
      echo "report to codecov skipped: not mainline version(python, django)"
    fi

# when the build fails (e.g. uploading log files), the result is in TRAVIS_TEST_RESULT environment variable
# after_failure: skip

# # if and only if deployment is active
# before_deploy: skip
#
#
# # deploy:
#
# # if and only if deployment is active
# after_deploy: skip

after_script: skip
